[{"E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\index.js":"1","E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\App.js":"2","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\index.js":"3","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\App.js":"4","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\ColorPalette.js":"5","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Header.js":"6","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\State.js":"7","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Home.js":"8","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Single.js":"9","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Search.js":"10","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\CountryThumb.js":"11","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Filter.js":"12"},{"size":301,"mtime":1610728860724,"results":"13","hashOfConfig":"14"},{"size":3151,"mtime":1610890120745,"results":"15","hashOfConfig":"14"},{"size":259,"mtime":1630517658593,"results":"16","hashOfConfig":"17"},{"size":725,"mtime":1630598390542,"results":"18","hashOfConfig":"17"},{"size":833,"mtime":1630597103279,"results":"19","hashOfConfig":"17"},{"size":1952,"mtime":1630599837953,"results":"20","hashOfConfig":"17"},{"size":843,"mtime":1630597334341,"results":"21","hashOfConfig":"17"},{"size":1904,"mtime":1630601461512,"results":"22","hashOfConfig":"17"},{"size":5874,"mtime":1630487226636,"results":"23","hashOfConfig":"17"},{"size":1117,"mtime":1630598144999,"results":"24","hashOfConfig":"17"},{"size":1666,"mtime":1630600489061,"results":"25","hashOfConfig":"17"},{"size":925,"mtime":1630601190321,"results":"26","hashOfConfig":"17"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"tsvdf1",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1f1mabd",{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"34"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"34"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"34"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\index.js",[],["56","57"],"E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\App.js",[],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\index.js",[],["58","59"],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\App.js",["60","61","62"],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\ColorPalette.js",[],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Header.js",["63","64","65","66"],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\State.js",["67"],"import axios from 'axios';\r\nimport Search from './Search';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\nexport default function State() {\r\n  const [Countries, setCountries] = useState([]);\r\n  const [SearchTerms, setSearchTerms] = useState('');\r\n  useEffect(() => {\r\n    getCountries();\r\n  }, []);\r\n  const getCountries = () => {\r\n    axios\r\n      .get('https://restcountries.eu/rest/v2/all')\r\n      .then((res) => setCountries(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <Search\r\n        handleSearch={(e) => {\r\n          setSearchTerms(e.target.value);\r\n        }}\r\n      />\r\n      <h1>{SearchTerms}</h1>\r\n\r\n      {Countries.filter((e) =>\r\n        e.name.toLowerCase().includes(SearchTerms.toLowerCase())\r\n      ).map((e) => (\r\n        <h4>{e.name}</h4>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Home.js",["68","69","70"],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Single.js",["71","72","73","74"],"import axios from 'axios';\r\nimport styled from 'styled-components';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeContext from '../Components/ColorPalette';\r\nimport { Themes } from '../Components/ColorPalette';\r\n\r\nconst Grid = styled.div`\r\n  display: grid;\r\n  grid-template-columns: repeat(2, 1fr);\r\n  @media (max-width: 375px) {\r\n    grid-template-columns: repeat(1, 1fr);\r\n  }\r\n`;\r\n\r\nconst CardInfo = styled.div`\r\n  padding: 20px 0;\r\n`;\r\nconst Card = styled.div`\r\n  padding: 20px 60px;\r\n  @media (max-width: 375px) {\r\n    padding: 20px 0;\r\n  }\r\n`;\r\nconst FlexRow = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  @media (max-width: 375px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport default function Single({ match }) {\r\n  const [Country, setCountry] = useState({});\r\n  const [ListOfCountries, setListOfCountries] = useState([]);\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n  const Flag = styled.img`\r\n    width: 100%;\r\n    height: 350px;\r\n    object-fit: cover;\r\n    box-shadow: 0 5px 10px ${style.shadow};\r\n  `;\r\n  const Main = styled.main`\r\n    background-color: ${style.background};\r\n    padding: 0 100px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: start;\r\n    min-height: 100vh;\r\n    @media (max-width: 375px) {\r\n      padding: 0 25px;\r\n    }\r\n  `;\r\n  const H1 = styled.h1`\r\n    font-size: 2rem;\r\n    font-weight: 800;\r\n    color: ${style.text};\r\n  `;\r\n  const P = styled.p`\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    align-items: center;\r\n    margin: 10px 0;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: ${style.text};\r\n  `;\r\n  const ALink = styled.a`\r\n    padding: 5px 20px;\r\n    border: 2px solid ${style.element};\r\n    background-color: ${style.element};\r\n    color: ${style.text};\r\n    text-decoration: none;\r\n    margin: 10px 10px 10px 0;\r\n    box-shadow: 0 5px 10px ${style.shadow};\r\n    display: flex;\r\n  `;\r\n  const AButton = styled.button`\r\n    display: flex;\r\n    align-items: center;\r\n    font-size: 1rem;\r\n    padding: 5px 20px;\r\n    border: 2px solid ${style.element};\r\n    color: ${style.text};\r\n    text-decoration: none;\r\n    box-shadow: 0 5px 10px #f4f4f4;\r\n    background: none;\r\n    margin: 40px 0;\r\n    cursor: pointer;\r\n  `;\r\n  const P60 = styled.p`\r\n    margin-left: 6px;\r\n    font-size: 1rem;\r\n    font-weight: 600;\r\n    color: ${style.text};\r\n    opacity: 0.6;\r\n  `;\r\n  const Svg = styled.svg`\r\n    width: 26px;\r\n    height: 26px;\r\n    color: ${style.text};\r\n    margin-right: 10px;\r\n  `;\r\n  useEffect(() => {\r\n    getCountryInfo();\r\n  }, [match]);\r\n  const getCountryInfo = () => {\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/name/${match.params.name}`)\r\n      .then(\r\n        (res) =>\r\n          res.data[0].name !== 'Western Sahara' && setCountry(res.data[0])\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/all`)\r\n      .then((res) => setListOfCountries(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <Main>\r\n        <Link to='/'>\r\n          <ALink>\r\n            <Svg\r\n              xmlns='http://www.w3.org/2000/svg'\r\n              class='h-6 w-6'\r\n              fill='none'\r\n              viewBox='0 0 24 24'\r\n              stroke='currentColor'\r\n            >\r\n              <path\r\n                stroke-linecap='round'\r\n                stroke-linejoin='round'\r\n                stroke-width='2'\r\n                d='M7 16l-4-4m0 0l4-4m-4 4h18'\r\n              />\r\n            </Svg>\r\n            back\r\n          </ALink>\r\n        </Link>\r\n        <Grid>\r\n          <Flag src={Country.flag} alt={Country.name} />\r\n          <Card>\r\n            <H1>{Country.name}</H1>\r\n            <FlexRow>\r\n              <CardInfo>\r\n                <P>\r\n                  Native Name : <P60>{Country.nativeName}</P60>\r\n                </P>\r\n                <P>\r\n                  Population :{' '}\r\n                  <P60>\r\n                    {Country.population && Country.population.toLocaleString()}\r\n                  </P60>\r\n                </P>\r\n                <P>\r\n                  Region : <P60>{Country.region}</P60>\r\n                </P>\r\n                <P>\r\n                  Sub Region : <P60>{Country.subregion}</P60>\r\n                </P>\r\n                <P>\r\n                  Capital : <P60>{Country.capital}</P60>\r\n                </P>\r\n              </CardInfo>\r\n              <CardInfo>\r\n                <P>\r\n                  Top Level Domain : <P60>{Country.topLevelDomain}</P60>\r\n                </P>\r\n                <P>\r\n                  Currencies :{' '}\r\n                  <P60>\r\n                    {Country.currencies &&\r\n                      Country.currencies.map((e) => e.code)}\r\n                  </P60>\r\n                </P>\r\n                <P>\r\n                  Languages :{' '}\r\n                  <P60>\r\n                    {Country.languages &&\r\n                      Country.languages.map((e) => `${e.name}, `)}\r\n                  </P60>\r\n                </P>\r\n              </CardInfo>\r\n            </FlexRow>\r\n            {Country.borders && (\r\n              <P>\r\n                Border Countries :\r\n                {Country.borders &&\r\n                  Country.borders\r\n                    .map((e) => ListOfCountries.find((a) => a.alpha3Code == e))\r\n                    .map((b) => {\r\n                      return (\r\n                        b !== undefined && (\r\n                          <ALink>\r\n                            <Link to={`/${b.name}`}>{b.name}</Link>\r\n                          </ALink>\r\n                        )\r\n                      );\r\n                    })}\r\n              </P>\r\n            )}\r\n          </Card>\r\n        </Grid>\r\n      </Main>\r\n    </>\r\n  );\r\n}\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Search.js",["75"],"import { useContext } from 'react';\r\nimport ThemeContext, { Themes } from './ColorPalette';\r\nfunction Search({ handleSearch, myvalue }) {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${style.element} rounded-md shadow-lg my-8 px-5 flex items-center`}\r\n      >\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          class={`h-6 w-6 ${style.text} mr-5`}\r\n          fill='none'\r\n          viewBox='0 0 24 24'\r\n          stroke='currentColor'\r\n        >\r\n          <path\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n            strokeWidth='2'\r\n            d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'\r\n          />\r\n        </svg>\r\n        <input\r\n          className={`bg-transparent border-none outline-none ${style.text} text-base py-4 pr-11`}\r\n          type='text'\r\n          onChange={handleSearch}\r\n          value={myvalue}\r\n          placeholder='Search for a country ...'\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\CountryThumb.js",["76"],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Filter.js",["77"],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"78","replacedBy":"82"},{"ruleId":"80","replacedBy":"83"},{"ruleId":"84","severity":1,"message":"85","line":5,"column":24,"nodeType":"86","messageId":"87","endLine":5,"endColumn":30},{"ruleId":"84","severity":1,"message":"88","line":6,"column":10,"nodeType":"86","messageId":"87","endLine":6,"endColumn":19},{"ruleId":"84","severity":1,"message":"89","line":7,"column":8,"nodeType":"86","messageId":"87","endLine":7,"endColumn":13},{"ruleId":"84","severity":1,"message":"88","line":1,"column":22,"nodeType":"86","messageId":"87","endLine":1,"endColumn":31},{"ruleId":"84","severity":1,"message":"90","line":1,"column":33,"nodeType":"86","messageId":"87","endLine":1,"endColumn":41},{"ruleId":"91","severity":1,"message":"92","line":7,"column":23,"nodeType":"93","messageId":"94","endLine":7,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":50,"column":20,"nodeType":"93","messageId":"94","endLine":50,"endColumn":22},{"ruleId":"84","severity":1,"message":"95","line":3,"column":10,"nodeType":"86","messageId":"87","endLine":3,"endColumn":20},{"ruleId":"91","severity":1,"message":"92","line":10,"column":23,"nodeType":"93","messageId":"94","endLine":10,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":36,"column":30,"nodeType":"93","messageId":"94","endLine":36,"endColumn":32},{"ruleId":"91","severity":1,"message":"92","line":44,"column":59,"nodeType":"93","messageId":"94","endLine":44,"endColumn":61},{"ruleId":"91","severity":1,"message":"92","line":37,"column":23,"nodeType":"93","messageId":"94","endLine":37,"endColumn":25},{"ruleId":"84","severity":1,"message":"96","line":79,"column":9,"nodeType":"86","messageId":"87","endLine":79,"endColumn":16},{"ruleId":"97","severity":1,"message":"98","line":107,"column":6,"nodeType":"99","endLine":107,"endColumn":13,"suggestions":"100"},{"ruleId":"91","severity":1,"message":"92","line":194,"column":74,"nodeType":"93","messageId":"94","endLine":194,"endColumn":76},{"ruleId":"91","severity":1,"message":"92","line":5,"column":23,"nodeType":"93","messageId":"94","endLine":5,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":9,"column":23,"nodeType":"93","messageId":"94","endLine":9,"endColumn":25},{"ruleId":"91","severity":1,"message":"92","line":5,"column":23,"nodeType":"93","messageId":"94","endLine":5,"endColumn":25},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],["101"],["102"],"no-unused-vars","'Themes' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'State' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useContext' is defined but never used.","'AButton' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCountryInfo'. Either include it or remove the dependency array.","ArrayExpression",["103"],"no-global-assign","no-unsafe-negation",{"desc":"104","fix":"105"},"Update the dependencies array to be: [getCountryInfo, match]",{"range":"106","text":"107"},[2672,2679],"[getCountryInfo, match]"]