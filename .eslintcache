[{"E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\index.js":"1","E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\App.js":"2","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\index.js":"3","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\App.js":"4","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\ColorPalette.js":"5","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Header.js":"6","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\State.js":"7","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Home.js":"8","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Single.js":"9","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Search.js":"10","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\CountryThumb.js":"11","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Filter.js":"12"},{"size":301,"mtime":1610728860724,"results":"13","hashOfConfig":"14"},{"size":3151,"mtime":1610890120745,"results":"15","hashOfConfig":"14"},{"size":254,"mtime":1630604905465,"results":"16","hashOfConfig":"17"},{"size":625,"mtime":1630605462010,"results":"18","hashOfConfig":"17"},{"size":451,"mtime":1630603989347,"results":"19","hashOfConfig":"17"},{"size":1931,"mtime":1630603945770,"results":"20","hashOfConfig":"17"},{"size":843,"mtime":1630597334341,"results":"21","hashOfConfig":"22"},{"size":1913,"mtime":1630603758400,"results":"23","hashOfConfig":"17"},{"size":5945,"mtime":1630605353397,"results":"24","hashOfConfig":"17"},{"size":1117,"mtime":1630598144999,"results":"25","hashOfConfig":"17"},{"size":1666,"mtime":1630605465429,"results":"26","hashOfConfig":"17"},{"size":927,"mtime":1630603862890,"results":"27","hashOfConfig":"17"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"tsvdf1",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"2n4yvo",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},"1f1mabd",{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"35"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"35"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"35"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"35"},"E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\index.js",[],["62","63"],"E:\\Documents\\Hamza Dahmani\\react-boiler-plate\\src\\App.js",[],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\index.js",[],["64","65"],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\App.js",[],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\ColorPalette.js",[],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Header.js",["66","67"],"import { useContext } from 'react';\r\nimport ThemeContext from './ColorPalette';\r\nimport { Themes } from './ColorPalette';\r\n\r\nfunction Header() {\r\n  const { Theme, setTheme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n\r\n  const ThemeToggler = () => {\r\n    Theme === 'light' ? setTheme('dark') : setTheme('light');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header\r\n        className={`sticky top-0 ${style.background} px-8 md:px-24 py-5 flex items-center justify-between shadow-md z-40`}\r\n      >\r\n        <h1 className={`text-xl md:text-2xl font-bold ${style.text}`}>\r\n          Where in the world?\r\n        </h1>\r\n        <button\r\n          className='flex bg-none outline-none border-none'\r\n          onClick={() => ThemeToggler()}\r\n        >\r\n          <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            className={`${style.text} h-6 w-6 mr-2`}\r\n            viewBox='0 0 24 24'\r\n            fill='none'\r\n          >\r\n            {Theme === 'dark' ? (\r\n              <path\r\n                className='stroke-current'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                strokeWidth='2'\r\n                d='M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z'\r\n              />\r\n            ) : (\r\n              <path\r\n                className='stroke-current'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                strokeWidth='2'\r\n                d='M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z'\r\n              />\r\n            )}\r\n          </svg>\r\n          <p className={`${style.text}`}>\r\n            {Theme == 'dark' ? 'Light Mode' : 'Dark Mode'}\r\n          </p>\r\n        </button>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\nexport default Header;\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\State.js",["68"],"import axios from 'axios';\r\nimport Search from './Search';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\nexport default function State() {\r\n  const [Countries, setCountries] = useState([]);\r\n  const [SearchTerms, setSearchTerms] = useState('');\r\n  useEffect(() => {\r\n    getCountries();\r\n  }, []);\r\n  const getCountries = () => {\r\n    axios\r\n      .get('https://restcountries.eu/rest/v2/all')\r\n      .then((res) => setCountries(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <Search\r\n        handleSearch={(e) => {\r\n          setSearchTerms(e.target.value);\r\n        }}\r\n      />\r\n      <h1>{SearchTerms}</h1>\r\n\r\n      {Countries.filter((e) =>\r\n        e.name.toLowerCase().includes(SearchTerms.toLowerCase())\r\n      ).map((e) => (\r\n        <h4>{e.name}</h4>\r\n      ))}\r\n    </>\r\n  );\r\n}\r\n",["69","70"],"E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Home.js",["71","72","73"],"import axios from 'axios';\r\nimport Search from '../Components/Search';\r\nimport Filter from '../Components/Filter';\r\nimport CountryThumb from '../Components/CountryThumb';\r\nimport ThemeContext, { Themes } from '../Components/ColorPalette';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\nexport default function State() {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n  const [FilterTerms, setFilterTerms] = useState('');\r\n  const [Countries, setCountries] = useState([]);\r\n  const [SearchTerms, setSearchTerms] = useState('');\r\n  useEffect(() => {\r\n    getCountries();\r\n  }, []);\r\n  const getCountries = () => {\r\n    axios\r\n      .get('https://restcountries.eu/rest/v2/all')\r\n      .then((res) => setCountries(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <main\r\n        className={`min-h-screen px-8 md:px-24 pb-8 flex flex-col items-start ${style.background}`}\r\n      >\r\n        <div className='flex w-full items-center justify-between'>\r\n          <Search\r\n            handleSearch={(e) => {\r\n              setSearchTerms(e.target.value);\r\n            }}\r\n          />\r\n          <Filter\r\n            handleFilter={(e) => {\r\n              e.target.value == 'All'\r\n                ? setFilterTerms('')\r\n                : setFilterTerms(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <section className='grid auto-rows-auto grid-cols-1 lg:grid-cols-4 md:grid-cols-3 gap-0 lg:gap-16 gap-y-14 w-full'>\r\n          {Countries.filter((e) =>\r\n            FilterTerms !== '' ? e.region == FilterTerms : e\r\n          )\r\n            .filter((e) =>\r\n              e.name.toLowerCase().includes(SearchTerms.toLowerCase())\r\n            )\r\n\r\n            .map((e) => (\r\n              <CountryThumb props={e} />\r\n            ))}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Pages\\Single.js",["74","75","76"],"import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeContext from '../Components/ColorPalette';\r\nimport { Themes } from '../Components/ColorPalette';\r\n\r\nexport default function Single({ match }) {\r\n  const [Country, setCountry] = useState({});\r\n  const [ListOfCountries, setListOfCountries] = useState([]);\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n  useEffect(() => {\r\n    getCountryInfo();\r\n  }, [match]);\r\n  const getCountryInfo = () => {\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/name/${match.params.name}`)\r\n      .then(\r\n        (res) =>\r\n          res.data[0].name !== 'Western Sahara' && setCountry(res.data[0])\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/all`)\r\n      .then((res) => setListOfCountries(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <main\r\n        className={`min-h-screen px-8 md:px-24 pb-8 flex flex-col items-start ${style.background}`}\r\n      >\r\n        <Link\r\n          to='/'\r\n          className={`${style.element} ${style.text} flex text-opacity-60 my-6 p-2 mr-3 shadow-lg`}\r\n        >\r\n          <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            class='h-6 w-6 mr-2'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n          >\r\n            <path\r\n              stroke-linecap='round'\r\n              stroke-linejoin='round'\r\n              stroke-width='2'\r\n              d='M7 16l-4-4m0 0l4-4m-4 4h18'\r\n            />\r\n          </svg>\r\n          back\r\n        </Link>\r\n\r\n        <div className='lg:grid-cols-2 grid-cols-1 grid'>\r\n          <img\r\n            className=' h-96 object-cover'\r\n            src={Country.flag}\r\n            alt={Country.name}\r\n          />\r\n          <div className='py-6 md:p-10'>\r\n            {Country.nativeName && (\r\n              <>\r\n                <h1 className={`mb-4 text-4xl font-bold ${style.text}`}>\r\n                  {Country.name}\r\n                </h1>\r\n                <div className='flex justify-between flex-col lg:flex-row'>\r\n                  <div>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Native Name :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.nativeName}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Population :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.population &&\r\n                          Country.population.toLocaleString()}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Region :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.region}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Sub Region :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.subregion}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Capital :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.capital}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className={`font-semibold ${style.text} mb-1`}>\r\n                      Top Level Domain :{' '}\r\n                      <span className={`opacity-60 ${Country.topLevelDomain}`}>\r\n                        {Country.region}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-1`}>\r\n                      Currencies :{' '}\r\n                      <span className={`opacity-60 ${Country.topLevelDomain}`}>\r\n                        {Country.currencies &&\r\n                          Country.currencies.map((e) => `${e.code},`)}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-1`}>\r\n                      Languages :{' '}\r\n                      <span className={`opacity-60 ${Country.topLevelDomain}`}>\r\n                        {Country.languages &&\r\n                          Country.languages.map((e) => `${e.name}, `)}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {Country.borders && (\r\n                  <p className={`${style.text} font-semibold`}>\r\n                    Border Countries :\r\n                    {Country.borders &&\r\n                      Country.borders\r\n                        .map((e) =>\r\n                          ListOfCountries.find((a) => a.alpha3Code == e)\r\n                        )\r\n                        .map((b) => {\r\n                          return (\r\n                            b !== undefined && (\r\n                              <Link\r\n                                className={`${style.element} ${style.text} text-opacity-60 inline-block p-2 mr-3 shadow-lg mb-3`}\r\n                                to={`/${b.name}`}\r\n                              >\r\n                                {b.name}\r\n                              </Link>\r\n                            )\r\n                          );\r\n                        })}\r\n                  </p>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Search.js",["77"],"import { useContext } from 'react';\r\nimport ThemeContext, { Themes } from './ColorPalette';\r\nfunction Search({ handleSearch, myvalue }) {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${style.element} rounded-md shadow-lg my-8 px-5 flex items-center`}\r\n      >\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          class={`h-6 w-6 ${style.text} mr-5`}\r\n          fill='none'\r\n          viewBox='0 0 24 24'\r\n          stroke='currentColor'\r\n        >\r\n          <path\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n            strokeWidth='2'\r\n            d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'\r\n          />\r\n        </svg>\r\n        <input\r\n          className={`bg-transparent border-none outline-none ${style.text} text-base py-4 pr-11`}\r\n          type='text'\r\n          onChange={handleSearch}\r\n          value={myvalue}\r\n          placeholder='Search for a country ...'\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\CountryThumb.js",["78"],"// import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeContext from '../Components/ColorPalette';\r\nimport { Themes } from '../Components/ColorPalette';\r\nimport { useContext } from 'react';\r\n\r\nexport default function CountryThumb({ props }) {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/${props.name}`} className='w-full'>\r\n        <div\r\n          className={`flex flex-col w-full ${style.element} shadow-lg rounded-lg overflow-hidden`}\r\n        >\r\n          <img\r\n            className='object-cover h-40'\r\n            src={props.flag}\r\n            alt={props.name}\r\n          />\r\n          <div className='px-4 py-6'>\r\n            <h1 className={`text-xl font-bold mb-2 ${style.text}`}>\r\n              {props.name}\r\n            </h1>\r\n            <div>\r\n              <p className={style.text}>\r\n                Population :{' '}\r\n                <span className={`opacity-60 ${style.text}`}>\r\n                  {props.population.toLocaleString()}\r\n                </span>\r\n              </p>\r\n              <p className={style.text}>\r\n                Regions :{' '}\r\n                <span className={`opacity-60 ${style.text}`}>\r\n                  {props.region}\r\n                </span>\r\n              </p>\r\n              <p className={style.text}>\r\n                Capital :{' '}\r\n                <span className={`opacity-60 ${style.text}`}>\r\n                  {props.capital}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","E:\\Documents\\Hamza Dahmani\\ReactProjects\\newrestcountries\\src\\Components\\Filter.js",["79"],"import { useContext } from 'react';\r\nimport ThemeContext, { Themes } from './ColorPalette';\r\nfunction Filter({ handleFilter }) {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n  return (\r\n    <>\r\n      <div className={`rounded-md shadow-lg  px-5 ${style.element}`}>\r\n        <select\r\n          onInput={handleFilter}\r\n          className={`px-5 bg-transparent py-5 ${style.text}`}\r\n        >\r\n          <option hidden disabled selected>\r\n            Filter by region\r\n          </option>\r\n          <option value='Africa'>Africa</option>\r\n          <option value='Americas'>Americas</option>\r\n          <option value='Asia'>Asia</option>\r\n          <option value='Europe'>Europe</option>\r\n          <option value='Oceania'>Oceania</option>\r\n          <option value='All'>All</option>\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n",{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"80","replacedBy":"84"},{"ruleId":"82","replacedBy":"85"},{"ruleId":"86","severity":1,"message":"87","line":7,"column":23,"nodeType":"88","messageId":"89","endLine":7,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":50,"column":20,"nodeType":"88","messageId":"89","endLine":50,"endColumn":22},{"ruleId":"90","severity":1,"message":"91","line":3,"column":10,"nodeType":"92","messageId":"93","endLine":3,"endColumn":20},{"ruleId":"80","replacedBy":"94"},{"ruleId":"82","replacedBy":"95"},{"ruleId":"86","severity":1,"message":"87","line":10,"column":23,"nodeType":"88","messageId":"89","endLine":10,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":36,"column":30,"nodeType":"88","messageId":"89","endLine":36,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":44,"column":43,"nodeType":"88","messageId":"89","endLine":44,"endColumn":45},{"ruleId":"86","severity":1,"message":"87","line":11,"column":23,"nodeType":"88","messageId":"89","endLine":11,"endColumn":25},{"ruleId":"96","severity":1,"message":"97","line":14,"column":6,"nodeType":"98","endLine":14,"endColumn":13,"suggestions":"99"},{"ruleId":"86","severity":1,"message":"87","line":130,"column":68,"nodeType":"88","messageId":"89","endLine":130,"endColumn":70},{"ruleId":"86","severity":1,"message":"87","line":5,"column":23,"nodeType":"88","messageId":"89","endLine":5,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":9,"column":23,"nodeType":"88","messageId":"89","endLine":9,"endColumn":25},{"ruleId":"86","severity":1,"message":"87","line":5,"column":23,"nodeType":"88","messageId":"89","endLine":5,"endColumn":25},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],["100"],["101"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'useContext' is defined but never used.","Identifier","unusedVar",["100"],["101"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getCountryInfo'. Either include it or remove the dependency array.","ArrayExpression",["102"],"no-global-assign","no-unsafe-negation",{"desc":"103","fix":"104"},"Update the dependencies array to be: [getCountryInfo, match]",{"range":"105","text":"106"},[555,562],"[getCountryInfo, match]"]