{"version":3,"sources":["Components/ColorPalette.js","Components/Header.js","Components/Search.js","Components/Filter.js","Components/CountryThumb.js","Pages/Home.js","Pages/Single.js","App.js","index.js"],"names":["Themes","light","background","element","text","shadow","dark","ThemeContext","createContext","Header","useContext","Theme","setTheme","style","className","onClick","xmlns","viewBox","fill","strokeLinecap","strokeLinejoin","strokeWidth","d","Search","handleSearch","myvalue","class","stroke","type","onChange","value","placeholder","Filter","handleFilter","onInput","hidden","disabled","selected","CountryThumb","props","to","name","src","flag","alt","population","toLocaleString","region","capital","State","useState","FilterTerms","setFilterTerms","Countries","setCountries","SearchTerms","setSearchTerms","useEffect","getCountries","axios","get","then","res","data","catch","err","console","log","e","target","filter","toLowerCase","includes","map","Single","match","Country","setCountry","ListOfCountries","setListOfCountries","getCountryInfo","params","stroke-linecap","stroke-linejoin","stroke-width","nativeName","subregion","topLevelDomain","currencies","code","languages","borders","find","a","alpha3Code","b","undefined","App","Provider","path","exact","component","Home","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.50a21b44.chunk.js","sourcesContent":["import { createContext } from 'react';\r\nexport const Themes = {\r\n  light: {\r\n    background: 'bg-light-background',\r\n    element: 'bg-light-element',\r\n    text: 'text-light-text',\r\n    shadow: 'bg-light-shadow',\r\n  },\r\n  dark: {\r\n    background: 'bg-dark-background',\r\n    element: 'bg-dark-element',\r\n    text: 'text-dark-text',\r\n    shadow: 'bg-dark-shadow',\r\n  },\r\n};\r\n\r\nconst ThemeContext = createContext(Themes);\r\n\r\nexport default ThemeContext;\r\n","import { useContext } from 'react';\r\nimport ThemeContext from './ColorPalette';\r\nimport { Themes } from './ColorPalette';\r\n\r\nfunction Header() {\r\n  const { Theme, setTheme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n\r\n  const ThemeToggler = () => {\r\n    Theme === 'light' ? setTheme('dark') : setTheme('light');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <header\r\n        className={`sticky top-0 ${style.background} px-8 md:px-24 py-5 flex items-center justify-between shadow-md z-40`}\r\n      >\r\n        <h1 className={`text-xl md:text-2xl font-bold ${style.text}`}>\r\n          Where in the world?\r\n        </h1>\r\n        <button\r\n          className='flex bg-none outline-none border-none'\r\n          onClick={() => ThemeToggler()}\r\n        >\r\n          <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            className={`${style.text} h-6 w-6 mr-2`}\r\n            viewBox='0 0 24 24'\r\n            fill='none'\r\n          >\r\n            {Theme === 'dark' ? (\r\n              <path\r\n                className='stroke-current'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                strokeWidth='2'\r\n                d='M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z'\r\n              />\r\n            ) : (\r\n              <path\r\n                className='stroke-current'\r\n                strokeLinecap='round'\r\n                strokeLinejoin='round'\r\n                strokeWidth='2'\r\n                d='M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z'\r\n              />\r\n            )}\r\n          </svg>\r\n          <p className={`${style.text}`}>\r\n            {Theme == 'dark' ? 'Light Mode' : 'Dark Mode'}\r\n          </p>\r\n        </button>\r\n      </header>\r\n    </>\r\n  );\r\n}\r\nexport default Header;\r\n","import { useContext } from 'react';\r\nimport ThemeContext, { Themes } from './ColorPalette';\r\nfunction Search({ handleSearch, myvalue }) {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`${style.element} rounded-md shadow-lg my-8 px-5 flex items-center`}\r\n      >\r\n        <svg\r\n          xmlns='http://www.w3.org/2000/svg'\r\n          class={`h-6 w-6 ${style.text} mr-5`}\r\n          fill='none'\r\n          viewBox='0 0 24 24'\r\n          stroke='currentColor'\r\n        >\r\n          <path\r\n            strokeLinecap='round'\r\n            strokeLinejoin='round'\r\n            strokeWidth='2'\r\n            d='M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z'\r\n          />\r\n        </svg>\r\n        <input\r\n          className={`bg-transparent border-none outline-none ${style.text} text-base py-4 pr-11`}\r\n          type='text'\r\n          onChange={handleSearch}\r\n          value={myvalue}\r\n          placeholder='Search for a country ...'\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Search;\r\n","import { useContext } from 'react';\r\nimport ThemeContext, { Themes } from './ColorPalette';\r\nfunction Filter({ handleFilter }) {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n  return (\r\n    <>\r\n      <div className={`rounded-md shadow-lg  px-5 ${style.element}`}>\r\n        <select\r\n          onInput={handleFilter}\r\n          className={`px-5 bg-transparent py-5 ${style.text}`}\r\n        >\r\n          <option hidden disabled selected>\r\n            Filter by region\r\n          </option>\r\n          <option value='Africa'>Africa</option>\r\n          <option value='Americas'>Americas</option>\r\n          <option value='Asia'>Asia</option>\r\n          <option value='Europe'>Europe</option>\r\n          <option value='Oceania'>Oceania</option>\r\n          <option value='All'>All</option>\r\n        </select>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Filter;\r\n","// import styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeContext from '../Components/ColorPalette';\r\nimport { Themes } from '../Components/ColorPalette';\r\nimport { useContext } from 'react';\r\n\r\nexport default function CountryThumb({ props }) {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n\r\n  return (\r\n    <>\r\n      <Link to={`/${props.name}`} className='w-full'>\r\n        <div\r\n          className={`flex flex-col w-full ${style.element} shadow-lg rounded-lg overflow-hidden`}\r\n        >\r\n          <img\r\n            className='object-cover h-40'\r\n            src={props.flag}\r\n            alt={props.name}\r\n          />\r\n          <div className='px-4 py-6'>\r\n            <h1 className={`text-xl font-bold mb-2 ${style.text}`}>\r\n              {props.name}\r\n            </h1>\r\n            <div>\r\n              <p className={style.text}>\r\n                Population :{' '}\r\n                <span className={`opacity-60 ${style.text}`}>\r\n                  {props.population.toLocaleString()}\r\n                </span>\r\n              </p>\r\n              <p className={style.text}>\r\n                Regions :{' '}\r\n                <span className={`opacity-60 ${style.text}`}>\r\n                  {props.region}\r\n                </span>\r\n              </p>\r\n              <p className={style.text}>\r\n                Capital :{' '}\r\n                <span className={`opacity-60 ${style.text}`}>\r\n                  {props.capital}\r\n                </span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport Search from '../Components/Search';\r\nimport Filter from '../Components/Filter';\r\nimport CountryThumb from '../Components/CountryThumb';\r\nimport ThemeContext, { Themes } from '../Components/ColorPalette';\r\nimport { useContext, useEffect, useState } from 'react';\r\n\r\nexport default function State() {\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n  const [FilterTerms, setFilterTerms] = useState('');\r\n  const [Countries, setCountries] = useState([]);\r\n  const [SearchTerms, setSearchTerms] = useState('');\r\n  useEffect(() => {\r\n    getCountries();\r\n  }, []);\r\n  const getCountries = () => {\r\n    axios\r\n      .get('https://restcountries.eu/rest/v2/all')\r\n      .then((res) => setCountries(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <main\r\n        className={`min-h-screen px-8 md:px-24 pb-8 flex flex-col items-start ${style.background}`}\r\n      >\r\n        <div className='flex w-full items-center justify-between'>\r\n          <Search\r\n            handleSearch={(e) => {\r\n              setSearchTerms(e.target.value);\r\n            }}\r\n          />\r\n          <Filter\r\n            handleFilter={(e) => {\r\n              e.target.value == 'All'\r\n                ? setFilterTerms('')\r\n                : setFilterTerms(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n        <section className='grid auto-rows-auto grid-cols-1 lg:grid-cols-4 md:grid-cols-3 gap-0 lg:gap-16 gap-y-14 w-full'>\r\n          {Countries.filter((e) =>\r\n            FilterTerms !== '' ? e.region == FilterTerms : e\r\n          )\r\n            .filter((e) =>\r\n              e.name.toLowerCase().includes(SearchTerms.toLowerCase())\r\n            )\r\n\r\n            .map((e) => (\r\n              <CountryThumb props={e} />\r\n            ))}\r\n        </section>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","import axios from 'axios';\r\nimport { useContext, useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ThemeContext from '../Components/ColorPalette';\r\nimport { Themes } from '../Components/ColorPalette';\r\n\r\nexport default function Single({ match }) {\r\n  const [Country, setCountry] = useState({});\r\n  const [ListOfCountries, setListOfCountries] = useState([]);\r\n  const { Theme } = useContext(ThemeContext);\r\n  const style = Theme == 'light' ? Themes.light : Themes.dark;\r\n  useEffect(() => {\r\n    getCountryInfo();\r\n  }, [match]);\r\n  const getCountryInfo = () => {\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/name/${match.params.name}`)\r\n      .then(\r\n        (res) =>\r\n          res.data[0].name !== 'Western Sahara' && setCountry(res.data[0])\r\n      )\r\n      .catch((err) => console.log(err));\r\n\r\n    axios\r\n      .get(`https://restcountries.eu/rest/v2/all`)\r\n      .then((res) => setListOfCountries(res.data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n  return (\r\n    <>\r\n      <main\r\n        className={`min-h-screen px-8 md:px-24 pb-8 flex flex-col items-start ${style.background}`}\r\n      >\r\n        <Link\r\n          to='/'\r\n          className={`${style.element} ${style.text} flex text-opacity-60 my-6 p-2 mr-3 shadow-lg`}\r\n        >\r\n          <svg\r\n            xmlns='http://www.w3.org/2000/svg'\r\n            class='h-6 w-6 mr-2'\r\n            fill='none'\r\n            viewBox='0 0 24 24'\r\n            stroke='currentColor'\r\n          >\r\n            <path\r\n              stroke-linecap='round'\r\n              stroke-linejoin='round'\r\n              stroke-width='2'\r\n              d='M7 16l-4-4m0 0l4-4m-4 4h18'\r\n            />\r\n          </svg>\r\n          back\r\n        </Link>\r\n\r\n        <div className='lg:grid-cols-2 grid-cols-1 grid'>\r\n          <img\r\n            className=' h-96 object-cover'\r\n            src={Country.flag}\r\n            alt={Country.name}\r\n          />\r\n          <div className='py-6 md:p-10'>\r\n            {Country.nativeName && (\r\n              <>\r\n                <h1 className={`mb-4 text-4xl font-bold ${style.text}`}>\r\n                  {Country.name}\r\n                </h1>\r\n                <div className='flex justify-between flex-col lg:flex-row'>\r\n                  <div>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Native Name :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.nativeName}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Population :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.population &&\r\n                          Country.population.toLocaleString()}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Region :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.region}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Sub Region :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.subregion}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-2`}>\r\n                      Capital :{' '}\r\n                      <span className={`opacity-60 ${style.text}`}>\r\n                        {Country.capital}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                  <div>\r\n                    <p className={`font-semibold ${style.text} mb-1`}>\r\n                      Top Level Domain :{' '}\r\n                      <span className={`opacity-60 ${Country.topLevelDomain}`}>\r\n                        {Country.region}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-1`}>\r\n                      Currencies :{' '}\r\n                      <span className={`opacity-60 ${Country.topLevelDomain}`}>\r\n                        {Country.currencies &&\r\n                          Country.currencies.map((e) => `${e.code},`)}\r\n                      </span>\r\n                    </p>\r\n                    <p className={`font-semibold ${style.text} mb-1`}>\r\n                      Languages :{' '}\r\n                      <span className={`opacity-60 ${Country.topLevelDomain}`}>\r\n                        {Country.languages &&\r\n                          Country.languages.map((e) => `${e.name}, `)}\r\n                      </span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                {Country.borders && (\r\n                  <p className={`${style.text} font-semibold`}>\r\n                    Border Countries :\r\n                    {Country.borders &&\r\n                      Country.borders\r\n                        .map((e) =>\r\n                          ListOfCountries.find((a) => a.alpha3Code == e)\r\n                        )\r\n                        .map((b) => {\r\n                          return (\r\n                            b !== undefined && (\r\n                              <Link\r\n                                className={`${style.element} ${style.text} text-opacity-60 inline-block p-2 mr-3 shadow-lg mb-3`}\r\n                                to={`/${b.name}`}\r\n                              >\r\n                                {b.name}\r\n                              </Link>\r\n                            )\r\n                          );\r\n                        })}\r\n                  </p>\r\n                )}\r\n              </>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </main>\r\n    </>\r\n  );\r\n}\r\n","import Header from './Components/Header';\nimport Home from './Pages/Home';\nimport Single from './Pages/Single';\nimport { Route, Switch } from 'react-router';\nimport ThemeContext from './Components/ColorPalette';\nimport { useState } from 'react';\nfunction App() {\n  const [Theme, setTheme] = useState('light');\n\n  return (\n    <>\n      <ThemeContext.Provider value={{ Theme, setTheme }}>\n        <Header />\n        <Switch>\n          <Route path='/' exact component={Home}></Route>\n          <Route path='/:name' component={Single}></Route>\n        </Switch>\n      </ThemeContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}